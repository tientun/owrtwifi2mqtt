#!/bin/sh

DEFAULT_MODE="event"
DEFAULT_LAST_SEEN_UPDATE_PERIOD_S=120

MODE=$DEFAULT_MODE
LAST_SEEN_UPDATE_PERIOD_S=$DEFAULT_LAST_SEEN_UPDATE_PERIOD_S

SCRIPT_NAME="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"


# Parse command line args
test_for_mode(){
  param_mode=$1
  if [ "$param_mode" == "event" -o "$param_mode" == "lastseen" ]; then
    MODE=$param_mode
    return 0
  fi
  return 1
}

test_for_ipv4(){
  param_ip=$1
  echo $param_ip | grep -E '\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4}\b' > /dev/null
  if [ $? -eq 0 ]; then
    MQTT_SERVER=$param_ip
    return 0
  fi
  return 1
}

test_for_update_periode_s(){
  param_up=$1
  expr $param_up : '[0-9][0-9]*$'
  if [ $? -eq 0 ]; then
    LAST_SEEN_UPDATE_PERIOD_S=$param_up
    return 0
  fi
  return 1
}

print_usage(){
cat << EOF
Supported optional parameters:
  mode: "event" or "lastseen" (default: $DEFAULT_MODE)
    In event mode changes of registered mac addresses are imediately pushed to the MQTT server
    In lastseen mode the registered mac addresses are periodically pushed to the MQTT server
  MQTT server IP: the IPv4 address of the MQTT server (default $DEFAULT_MQTT_SERVER)
  Udate periode [s]: only relevant for lastseen mode  (default $LAST_SEEN_UPDATE_PERIOD_S)
Examples:
  $SCRIPT_NAME
  $SCRIPT_NAME 192.168.1.2
  $SCRIPT_NAME lastseen 300
EOF
}

for param in "$@"; do
  test_for_mode $param || \
  test_for_ipv4 $param || \
  test_for_update_periode_s $param || \
  { print_usage; exit 1; }
done


if [ "$MODE" == "event" ]; then
  echo "$SCRIPT_NAME, mode: $MODE, MQTT server: $MQTT_SERVER"
  iw event | \
  while read LINE; do
    if echo $LINE | grep -q -E "(new|del) station"; then
      EVENT=`echo $LINE | awk '/(new|del) station/ {print $2}'`
      MAC=`echo $LINE | awk '/(new|del) station/ {print $4}'`
      INTERFACE=`echo $LINE | awk '/(new|del) station/ {print $1}'`
      echo "Mac: $MAC did $EVENT"
      ./mqtt_pub.sh $INTERFACE $MAC $EVENT
    fi
  done